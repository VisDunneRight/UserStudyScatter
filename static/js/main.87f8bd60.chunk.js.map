{"version":3,"sources":["Section/Pages/Demographic/style.js","Section/Pages/Demographic/Demographic.js","Section/Pages/Information/style.js","Section/Pages/Information/Information.js","Section/Pages/Break/Break.js","Section/Pages/Section/style.js","Section/Pages/Section/Section.js","Section/Pages/Radio/style.js","Section/Pages/Radio/Radio.js","Section/Pages/Pages.js","Section/style.js","Section/index.js","App.js","reportWebVitals.js","index.js"],"names":["MyRow","styled","Row","Demographics","page","nextPage","grabInformation","useState","values","setValues","Form","onSubmit","event","preventDefault","title","attributes","map","row","index","Group","as","controlId","label","Col","lg","Label","Control","type","value","onChange","e","fieldId","target","currentValues","placeholder","Button","variant","TypeSwitch","data","console","log","p","image","Figure","Image","height","width","src","process","Caption","caption","Information","exportStudy","results","finish","localStorage","clear","html","line","onClick","Break","text","Section","saveAnswer","nextQuestion","questionIndex","array","setArray","answer","setAnswer","useEffect","lengths","valuesUsed","used","usedLength","Array","isArray","length","push","maxLength","Math","max","i","Question","md","id","answerName","toString","then","response","alert","ImgRow","QRow","Radio","order","prevQuestion","prevAnswer","undefined","currQuestion","folderLoc","style","position","left","questionType","Error","typeRendering","Check","checked","currQ","Option","answers","Demographic","Pages","siteStructure","currPage","pages","MyContainer","Container","MyDiv","div","MyProgressBar","ProgressBar","props","barColor","state","progress","currSession","shuffle","randomIndex","currentIndex","floor","random","setProgressBar","setItem","JSON","stringify","setState","progressLabel","updatePage","size","demographic","sessionID","meta","field","newAnswers","slice","Promise","resolve","FileSaver","require","jsonFile","session","jsonse","blob","Blob","saveAs","studyData","studyMeta","this","questionOrder","getItem","keys","reorder","parse","Navbar","expand","bg","now","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87f8bd60.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Row } from \"react-bootstrap\";\n\nexport const MyRow = styled(Row)`\n  justify-content: center;\n  text-align: center;\n`;\n","import { Button, Form, Col } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { MyRow } from \"./style\";\n\nconst Demographics = ({ page, nextPage, grabInformation }) => {\n  const [values, setValues] = useState({});\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    grabInformation(values);\n    nextPage();\n  }\n  function onChange(fieldId, value) {\n    setValues((currentValues) => {\n      currentValues[fieldId] = value;\n      return currentValues;\n    });\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <MyRow>\n        <h1>{page.title}</h1>\n      </MyRow>\n      {page.attributes &&\n        page.attributes.map((row, index) => (\n          <Form.Group key={index} as={MyRow} controlId={row.label}>\n            <Col lg=\"2\">\n              <Form.Label>{row.label}</Form.Label>\n            </Col>\n            <Col lg=\"2\">\n              <Form.Control\n                type=\"text\"\n                value={values[row.label]}\n                onChange={(e) => onChange(row.label, e.target.value)}\n                placeholder={row.label}\n              />\n            </Col>\n          </Form.Group>\n        ))}\n      <MyRow>\n        <br />\n      </MyRow>\n      <MyRow>\n        <Col>\n          <Button variant=\"secondary\" type=\"submit\">\n            Next\n          </Button>{\" \"}\n        </Col>\n      </MyRow>\n    </Form>\n  );\n};\n\nexport default Demographics;\n","import styled from \"styled-components\";\nimport { Row } from \"react-bootstrap\";\n\nexport const MyRow = styled(Row)`\n  justify-content: center;\n  text-align: center;\n`;\n","import { Col, Button, Image, Figure } from \"react-bootstrap\";\nimport { MyRow } from \"./style\";\n\nconst TypeImage = ({ type }) => {\n  switch (type) {\n    case \"Area\":\n      return <Image src={process.env.PUBLIC_URL + \"/Area.png\"} />;\n    case \"Angle\":\n      return <Image src={process.env.PUBLIC_URL + \"/Angle.png\"} />;\n    case \"Length\":\n      return <Image src={process.env.PUBLIC_URL + \"/Length.png\"} />;\n    case \"POUA\":\n      return <Image src={process.env.PUBLIC_URL + \"/POUA.png\"} />;\n    case \"POCA\":\n      return <Image src={process.env.PUBLIC_URL + \"/POCA.png\"} />;\n    default:\n      return <></>;\n  }\n};\n\nconst RenderResults = ({ results }) => {\n  return (\n    <>\n      <MyRow>\n        <Col>More Accurate</Col>\n        <Col>Less Accurate</Col>\n      </MyRow>\n\n      {results.map((row) => (\n        <Col>\n          <TypeImage key={row[0]} type={row[0]} />\n        </Col>\n      ))}\n    </>\n  );\n};\n\nconst TypeSwitch = ({ data }) => {\n  console.log(data);\n  if (data.p) {\n    return <MyRow>{data.p}</MyRow>;\n  } else if (data.image) {\n    const image = data.image;\n    return (\n      <MyRow>\n        <Figure>\n          <Figure.Image\n            height={image.height ? image.height : \"100%\"}\n            width={image.width ? image.width : \"100%\"}\n            src={process.env.PUBLIC_URL + \"/\" + image.src}\n          />\n          <Figure.Caption>{image.caption}</Figure.Caption>\n        </Figure>\n      </MyRow>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nconst Information = ({ page, nextPage, exportStudy, results }) => {\n  if (page.finish === true) {\n    localStorage.clear();\n  }\n  return (\n    <>\n      <MyRow>\n        <h1>{page.title}</h1>\n      </MyRow>\n      {page.html &&\n        page.html.map((line, index) => (\n          <TypeSwitch key={index} data={line}></TypeSwitch>\n        ))}\n      <MyRow>\n        <br />\n      </MyRow>\n      {page.finish === true ? (\n        <>\n          <MyRow>\n            <Col>\n              <Button variant=\"secondary\" onClick={exportStudy}>\n                Download File\n              </Button>{\" \"}\n            </Col>\n          </MyRow>\n        </>\n      ) : (\n        <MyRow>\n          <Col>\n            <Button variant=\"secondary\" onClick={nextPage}>\n              Next\n            </Button>{\" \"}\n          </Col>\n        </MyRow>\n      )}\n    </>\n  );\n};\n\nexport default Information;\n","import { Row, Button } from \"react-bootstrap\";\n\nconst Break = ({ page, nextPage }) => {\n  return (\n    <>\n      <Row>\n        <h1>{page.title}</h1>\n      </Row>\n      <pre>{page.text}</pre>\n      {/* </Row> */}\n      <Button variant=\"secondary\" onClick={nextPage}>\n        Next\n      </Button>{\" \"}\n    </>\n  );\n};\n\nexport default Break;\n","import styled from \"styled-components\";\nimport { Row } from \"react-bootstrap\";\n\nexport const MyRow = styled(Row)`\n  justify-content: center;\n  text-align: center;\n`;\n","import { Col, Button, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport Poca from \"../../../Components/Poca/Poca\";\nimport Area from \"../../../Components/Area/Area\";\nimport Angle from \"../../../Components/Angle/Angle\";\nimport Length from \"../../../Components/Length/Length\";\nimport Poua from \"../../../Components/Poua/Poua\";\nimport { MyRow } from \"./style\";\n\nconst Section = ({ page, data, saveAnswer, nextQuestion, questionIndex }) => {\n  const [array, setArray] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n\n  function handleNextQuestion(event) {\n    event.preventDefault();\n    if (answer === \"\") {\n      alert(\"Please select an option before hitting next.\");\n      return;\n    }\n    const answerName = data.answerName[questionIndex].toString();\n    saveAnswer(answerName, answer).then(function (response) {\n      setAnswer(\"\");\n      nextQuestion(array.length);\n    });\n  }\n\n  function onChange(value) {\n    setAnswer(value);\n  }\n\n  useEffect(() => {\n    let lengths = [];\n    let array = [];\n    for (let used of page.valuesUsed) {\n      let usedLength = 0;\n      if (Array.isArray(data[used])) {\n        usedLength = data[used].length;\n      } else {\n        usedLength = 1;\n      }\n\n      lengths.push(usedLength);\n    }\n    const maxLength = Math.max(...lengths);\n    for (var i = 0; i < maxLength; i++) {\n      let row = {};\n      let index = 0;\n      for (let used of page.valuesUsed) {\n        const usedLength = lengths[index];\n        index++;\n        if (usedLength === 1) {\n          row[used] = data[used];\n        } else if (usedLength === maxLength) {\n          row[used] = data[used][i];\n        } else {\n          console.log(\n            \"Something went wrong with number entries don't match max:\",\n            maxLength,\n            \"or 1:\",\n            used\n          );\n        }\n      }\n      array.push(row);\n    }\n    setArray(array);\n  }, [data, page]);\n\n  const typeRendering = (data, array, index, domain) => {\n    switch (data.type) {\n      case \"POCA\":\n        return <Poca question={array[index]} domain={domain} />;\n      case \"Angle\":\n        return <Angle question={array[index]} domain={domain} />;\n      case \"Area\":\n        return <Area question={array[index]} domain={domain} />;\n      case \"Length\":\n        return <Length question={array[index]} domain={domain} />;\n      case \"POUA\":\n        return <Poua question={array[index]} domain={domain} />;\n      default:\n        throw new Error(\"Missing type of testing Section.\");\n    }\n  };\n\n  return (\n    <>\n      {/* <MyRow>{typeRendering(data, array, questionIndex, data.Domain)}</MyRow> */}\n      <MyRow>{array[questionIndex] && array[questionIndex].Question}</MyRow>\n      <MyRow>\n        <Col md={2}>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"\"\n            id=\"Answer\"\n            onChange={(e) => onChange(e.target.value)}\n            value={answer}\n          />\n        </Col>\n      </MyRow>\n      <MyRow>\n        <br />\n      </MyRow>\n      <MyRow>\n        <Col>\n          <Button variant=\"secondary\" onClick={handleNextQuestion}>\n            Next\n          </Button>{\" \"}\n        </Col>\n      </MyRow>\n    </>\n  );\n};\n\nexport default Section;\n","import styled from \"styled-components\";\nimport { Row, Image } from \"react-bootstrap\";\n\nexport const MyRow = styled(Row)`\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const ImgRow = styled(Row)`\n  align-items: center;\n`;\n\nexport const QRow = styled(Row)`\n  padding-bottom: 10px;\n`;\n\nexport const TopImage = styled(Image)`\n  padding-bottom: 10px;\n`;\n","import { Col, Button, Form, Image, Input } from \"react-bootstrap\";\nimport { useEffect, useState } from \"react\";\nimport { MyRow, TopImage, ImgRow, QRow } from \"./style\";\n\nconst Radio = ({\n  page,\n  data,\n  order,\n  saveAnswer,\n  prevQuestion,\n  prevAnswer,\n  nextQuestion,\n  questionIndex,\n}) => {\n  const [answer, setAnswer] = useState(prevAnswer ? prevAnswer[1] : -1);\n\n  useEffect(() => {\n    if (prevAnswer === undefined) {\n      setAnswer(-1);\n    } else {\n      setAnswer(prevAnswer[1]);\n    }\n  }, [prevAnswer]);\n  function handleNextQuestion(event) {\n    event.preventDefault();\n    if (answer === -1) {\n      alert(\"Please select an option before hitting next.\");\n      return;\n    }\n    const currQ = data[order[questionIndex]];\n    const answerName =\n      currQ[\"chartId\"] +\n      \"_\" +\n      currQ[\"algorithm\"] +\n      \"_\" +\n      currQ[\"questionType\"] +\n      \"_\" +\n      currQ[\"Privacy\"] +\n      \"_\" +\n      currQ[\"Bin\"];\n    saveAnswer(answerName, answer).then(function (response) {\n      setAnswer(-1);\n      nextQuestion(questionIndex + 1);\n    });\n  }\n\n  function onChange(value) {\n    setAnswer(value);\n  }\n  function onkeyPress(event) {\n    console.log(event);\n    if (event.charCode === 49) {\n      this.onChange(0);\n    } else if (event.charCode === 50) {\n      this.onChange(1);\n    } else if (event.charCode === 51) {\n      this.onChange(2);\n    } else if (event.charCode === 52) {\n      this.onChange(3);\n    } else if (event.charCode === 13 || event.charCode === 32) {\n      this.handleNextQuestion();\n    }\n  }\n\n  const typeRendering = (data) => {\n    switch (data.questionType) {\n      case \"distribution\":\n        return (\n          <h4>\n            <b>Distribution: </b>The distribution of points in space for the\n            graph on the right is comparable the graphs on the left, including\n            the visibility of manifolds and the relative density of each region.\n          </h4>\n        );\n      case \"correlation\":\n        return (\n          <h4>\n            <b>Correlation: </b>The graph on the right preserves the level of\n            dependence between the two attributes—including non-linear\n            dependence.\n          </h4>\n        );\n      case \"clusters\":\n        return (\n          <h4>\n            <b>Clusters: </b>The clusters visible in the graph on the left—and\n            no other clusters—are visible on the graph on the right and occur in\n            the same places.\n          </h4>\n        );\n      default:\n        throw new Error(\"Missing type of testing Section.\");\n    }\n  };\n  var currQuestion = data[order[questionIndex]];\n  var folderLoc =\n    process.env.PUBLIC_URL + \"/Chart\" + currQuestion[\"chartId\"] + \"/\";\n\n  return (\n    <>\n      <ImgRow>\n        <Col>\n          {/* <TopImage\n            src={folderLoc + currQuestion[\"scatteredImg\"]}\n            width=\"400px\"\n          /> */}\n          <div style={{ position: \"absolute\", left: \"30%\" }}>Original</div>\n          <Image src={folderLoc + currQuestion[\"binnedImg\"]} width=\"600px\" />\n        </Col>\n        <Col>\n          <div style={{ position: \"absolute\", left: \"65%\" }}>Private</div>\n          <Image src={folderLoc + currQuestion[\"algorithmImg\"]} width=\"600px\" />\n        </Col>\n      </ImgRow>\n      <MyRow>{typeRendering(currQuestion)}</MyRow>\n      <MyRow>\n        <br />\n      </MyRow>\n      <QRow>\n        <Form>\n          <Form.Check\n            type=\"radio\"\n            onClick={(e) => onChange(0)}\n            checked={answer === 0 ? true : false}\n            id={`option-0`}\n            label={`Doesn’t preserve the feature`}\n          />\n          <Form.Check\n            type=\"radio\"\n            onClick={(e) => onChange(1)}\n            checked={answer === 1 ? true : false}\n            id={`option-1`}\n            label={`Suggests the feature could exist`}\n          />\n          <Form.Check\n            type=\"radio\"\n            onClick={(e) => onChange(2)}\n            checked={answer === 2 ? true : false}\n            id={`option-2`}\n            label={`Somewhat preserves the feature`}\n          />\n          <Form.Check\n            type=\"radio\"\n            onClick={(e) => onChange(3)}\n            checked={answer === 3 ? true : false}\n            id={`option-3`}\n            label={`Preserves the feature very well`}\n          />\n        </Form>\n      </QRow>\n      <MyRow>\n        <Col>\n          <Button variant=\"secondary\" onClick={prevQuestion}>\n            Prev\n          </Button>{\" \"}\n        </Col>\n        <Col>\n          <Button variant=\"secondary\" onClick={handleNextQuestion}>\n            Next\n          </Button>{\" \"}\n        </Col>\n      </MyRow>\n    </>\n  );\n};\n\nexport default Radio;\n","import React from \"react\";\nimport Demographics from \"./Demographic/Demographic\";\nimport Information from \"./Information/Information\";\nimport Break from \"./Break/Break\";\nimport Section from \"./Section/Section\";\nimport Radio from \"./Radio/Radio\";\n\nconst Option = ({\n  page,\n  data,\n  order,\n  grabInformation,\n  saveAnswer,\n  questionIndex,\n  exportStudy,\n  prevQuestion,\n  nextQuestion,\n  answers,\n  nextPage,\n  results,\n}) => {\n  console.log(page);\n  if (page === undefined) {\n    return <></>;\n  } else if (page.type === \"Demographic\") {\n    return (\n      <Demographics\n        page={page}\n        grabInformation={grabInformation}\n        nextPage={nextPage}\n      />\n    );\n  } else if (page.type === \"Information\") {\n    return (\n      <Information\n        page={page}\n        nextPage={nextPage}\n        exportStudy={exportStudy}\n        results={results}\n      />\n    );\n  } else if (page.type === \"Section\") {\n    return (\n      <Section\n        page={page}\n        data={data[page.position]}\n        saveAnswer={saveAnswer}\n        questionIndex={questionIndex}\n        nextQuestion={nextQuestion}\n      />\n    );\n  } else if (page.type === \"Radio\") {\n    return (\n      <Radio\n        page={page}\n        data={data[page.position]}\n        order={order}\n        saveAnswer={saveAnswer}\n        questionIndex={questionIndex}\n        prevQuestion={prevQuestion}\n        nextQuestion={nextQuestion}\n        prevAnswer={answers[questionIndex]}\n      />\n    );\n  } else if (page.type === \"Break\") {\n    return <Break page={page} nextPage={nextPage} />;\n  } else {\n    console.log(\"Page missing\", page.type);\n    return <></>;\n  }\n};\n\nconst Pages = ({\n  siteStructure,\n  data,\n  order,\n  grabInformation,\n  currPage,\n  saveAnswer,\n  nextPage,\n  exportStudy,\n  prevQuestion,\n  nextQuestion,\n  answers,\n  questionIndex,\n  results,\n}) => {\n  return (\n    <>\n      {siteStructure.pages && (\n        <Option\n          key={currPage}\n          page={siteStructure.pages[currPage]}\n          data={data}\n          order={order}\n          grabInformation={grabInformation}\n          saveAnswer={saveAnswer}\n          exportStudy={exportStudy}\n          nextPage={nextPage}\n          prevQuestion={prevQuestion}\n          nextQuestion={nextQuestion}\n          answers={answers}\n          questionIndex={questionIndex}\n          results={results}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Pages;\n","import { Container, ProgressBar } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nexport const MyContainer = styled(Container)`\n  background-color: white;\n  min-height: 600px;\n`;\n\nexport const MyDiv = styled.div`\n  background-color: lightgray;\n  display: flex;\n  flex-flow: column;\n  min-height: 100vh;\n`;\n\nexport const MyProgressBar = styled(ProgressBar)`\n  width: 100vw;\n  color: ${(props) => props.barColor};\n`;\n","import React from \"react\";\nimport studyData from \"../Data/studyData.json\";\nimport studyMeta from \"../Data/studyMeta.json\";\nimport Pages from \"./Pages/Pages\";\nimport { MyContainer, MyDiv, MyProgressBar } from \"./style\";\nimport { Navbar } from \"react-bootstrap\";\n\nclass Section extends React.Component {\n  state = {\n    data: {},\n    length: -1,\n    siteStructure: {},\n    progress: 0,\n    currSession: { currPage: 0, id: 0, questionIndex: 0 },\n    order: [],\n    answers: [],\n    results: [],\n  };\n\n  shuffle = (array) => {\n    let currentIndex = array.length,\n      randomIndex;\n\n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n\n    return array;\n  };\n\n  componentDidMount() {\n    const data = studyData;\n    const siteStructure = studyMeta;\n    this.setState({\n      data: data,\n      siteStructure: siteStructure,\n      length: data[0].length,\n    });\n    console.log(studyMeta, this.state.currSession);\n    const questionOrder = localStorage.getItem(\"QuestionOrder\");\n    const progress = localStorage.getItem(\"Progress\");\n    const progressLabel = localStorage.getItem(\"ProgressLabel\");\n    const currSession = localStorage.getItem(\"currSession\");\n    const answers = localStorage.getItem(\"answers\");\n    if (questionOrder) {\n      this.setState({ order: questionOrder });\n    } else {\n      var array = [...Array(data[0].length).keys()];\n      const reorder = this.shuffle(array);\n      this.setState({ order: reorder });\n    }\n    if (progress) {\n      this.setState({ progress: progress });\n    }\n    if (progressLabel) {\n      this.setState({ progressLabel: progressLabel });\n    }\n    if (currSession) {\n      this.setState({ currSession: JSON.parse(currSession) });\n    } else {\n      this.setState({ currSession: { currPage: 0, id: 0, questionIndex: 0 } });\n    }\n    if (answers) {\n      this.setState({ answers: JSON.parse(answers) });\n    }\n  }\n\n  nextPage = () => {\n    const currSession = this.state.currSession;\n    currSession.currPage += 1;\n    currSession.questionIndex = 0;\n    // const currType = this.state.siteStructure.pages[currSession.currPage].type;\n    // if (currType === \"Section\") {\n    this.setProgressBar(0, \"\");\n    // } else {\n    //   this.setProgressBar(\n    //     \"Page \" +\n    //       (currSession.currPage / (this.state.siteStructure.pages.length - 1)) *\n    //         100,\n    //     currSession.currPage +\n    //       \" / \" +\n    //       (this.state.siteStructure.pages.length - 1)\n    //   );\n    // }\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\n    this.setState({ currSession: currSession });\n    if (this.state.siteStructure.pages.length - 1 === currSession.currPage) {\n      this.exportStudy();\n    }\n  };\n\n  setProgressBar = (value, label) => {\n    localStorage.setItem(\"Progress\", value);\n    localStorage.setItem(\"ProgressLabel\", label);\n    this.setState({ progress: value, progressLabel: label });\n  };\n\n  updatePage = (value) => {\n    const currSession = this.state.currSession;\n    const size = this.state.length;\n    currSession.questionIndex += value;\n    console.log(currSession, this.state.answers);\n    if (currSession.questionIndex === size) {\n      this.nextPage();\n      return;\n    }\n    this.setProgressBar(\n      (currSession.questionIndex / size) * 100,\n      \"Question \" + currSession.questionIndex + \" / \" + size\n    );\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\n    this.setState({ currSession: currSession });\n  };\n\n  prevQuestion = () => {\n    this.updatePage(-1);\n  };\n\n  nextQuestion = () => {\n    this.updatePage(1);\n  };\n\n  grabInformation = (data) => {\n    console.log(\"grab Information\");\n    const currSession = this.state.currSession;\n    currSession.demographic = data;\n    const sessionID = this.state.siteStructure.meta.sessionID;\n    if (sessionID in data) {\n      currSession.id = data[sessionID];\n    }\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\n    this.setState({ currSession: currSession });\n  };\n\n  saveAnswer = (field, answer) => {\n    const newAnswers = this.state.answers.slice();\n    if (this.state.currSession.questionIndex > newAnswers.length - 1) {\n      newAnswers.push([field, answer]);\n    } else {\n      newAnswers[this.state.currSession.questionIndex] = [field, answer];\n    }\n    localStorage.setItem(\"answers\", JSON.stringify(newAnswers));\n    this.setState({ answers: newAnswers });\n    return Promise.resolve(newAnswers);\n  };\n\n  exportStudy = () => {\n    var FileSaver = require(\"file-saver\");\n\n    let jsonFile = {\n      session: this.state.currSession,\n      answers: this.state.answers,\n    };\n\n    var jsonse = JSON.stringify(jsonFile, null, 2);\n\n    var blob = new Blob([jsonse], { type: \"application/json\" });\n    FileSaver.saveAs(blob, \"user\" + this.state.currSession.id + \".json\");\n  };\n\n  render() {\n    console.log(this.state.currSession);\n    return (\n      <MyDiv>\n        <MyContainer>\n          <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\n            <MyProgressBar\n              now={this.state.progress}\n              label={this.state.progress + \"%\"}\n              variant=\"info\"\n            />\n          </Navbar>\n          <Pages\n            siteStructure={this.state.siteStructure}\n            currPage={\n              this.state.currSession != null\n                ? this.state.currSession.currPage\n                : undefined\n            }\n            data={this.state.data}\n            order={this.state.order}\n            grabInformation={this.grabInformation}\n            saveAnswer={this.saveAnswer}\n            nextPage={this.nextPage}\n            prevQuestion={this.prevQuestion}\n            nextQuestion={this.nextQuestion}\n            answers={this.state.answers}\n            exportStudy={this.exportStudy}\n            results={this.state.results}\n            questionIndex={\n              this.state.currSession != null\n                ? this.state.currSession.questionIndex\n                : undefined\n            }\n          />\n        </MyContainer>\n      </MyDiv>\n    );\n  }\n}\n\nexport default Section;\n","import './App.css';\nimport Section from './Section'\n\nfunction App() {\n  return <Section/>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}