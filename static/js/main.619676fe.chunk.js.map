{"version":3,"sources":["Section/Pages/Demographic/style.js","Section/Pages/Demographic/Demographic.js","Section/Pages/Information/style.js","Section/Pages/Information/Information.js","Section/Pages/Break/Break.js","Section/Pages/Section/style.js","Section/Pages/Section/Section.js","Section/Pages/Radio/style.js","Section/Pages/Radio/Radio.js","Section/Pages/Pages.js","Section/style.js","Section/index.js","App.js","reportWebVitals.js","index.js"],"names":["MyRow","styled","Row","Demographics","page","nextPage","grabInformation","useState","values","setValues","Form","onSubmit","event","preventDefault","title","attributes","map","row","index","Group","as","controlId","label","Col","lg","Label","Control","type","value","onChange","e","fieldId","target","currentValues","placeholder","Button","variant","TypeSwitch","data","p","image","Figure","Image","height","width","src","process","Caption","caption","Information","exportStudy","results","finish","localStorage","clear","html","line","onClick","Break","text","Section","saveAnswer","nextQuestion","questionIndex","array","setArray","answer","setAnswer","useEffect","lengths","valuesUsed","used","usedLength","Array","isArray","length","push","maxLength","Math","max","i","console","log","Question","md","id","answerName","toString","then","response","alert","ImgRow","QRow","Radio","order","prevQuestion","prevAnswer","handleNextQuestion","currQ","undefined","handleKeyPress","useCallback","key","document","addEventListener","removeEventListener","currQuestion","folderLoc","style","position","left","questionType","Error","typeRendering","Check","checked","Option","answers","Demographic","Pages","siteStructure","currPage","pages","MyContainer","Container","MyDiv","div","MyProgressBar","ProgressBar","props","barColor","state","progress","currSession","shuffle","correlationIndex","clusterIndex","distributionIndex","currentIndex","floor","random","randCorrIndex","corrIndex","randClustIndex","clustIndex","randDistIndex","distIndex","concat","setProgressBar","setItem","JSON","stringify","setState","progressLabel","updatePage","size","demographic","sessionID","meta","field","newAnswers","slice","Promise","resolve","FileSaver","require","jsonFile","session","jsonse","blob","Blob","saveAs","backupStudy","loadBackup","studyData","studyMeta","this","questionOrder","getItem","split","keys","reorder","parse","Navbar","expand","bg","now","alignItems","sm","span","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.619676fe.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Row } from \"react-bootstrap\";\n\nexport const MyRow = styled(Row)`\n  justify-content: center;\n  text-align: center;\n`;\n","import { Button, Form, Col } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { MyRow } from \"./style\";\n\nconst Demographics = ({ page, nextPage, grabInformation }) => {\n  const [values, setValues] = useState({});\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    grabInformation(values);\n    nextPage();\n  }\n  function onChange(fieldId, value) {\n    setValues((currentValues) => {\n      currentValues[fieldId] = value;\n      return currentValues;\n    });\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <MyRow>\n        <h1>{page.title}</h1>\n      </MyRow>\n      {page.attributes &&\n        page.attributes.map((row, index) => (\n          <Form.Group key={index} as={MyRow} controlId={row.label}>\n            <Col lg=\"2\">\n              <Form.Label>{row.label}</Form.Label>\n            </Col>\n            <Col lg=\"2\">\n              <Form.Control\n                type=\"text\"\n                value={values[row.label]}\n                onChange={(e) => onChange(row.label, e.target.value)}\n                placeholder={row.label}\n              />\n            </Col>\n          </Form.Group>\n        ))}\n      <MyRow>\n        <br />\n      </MyRow>\n      <MyRow>\n        <Col>\n          <Button variant=\"secondary\" type=\"submit\">\n            Next\n          </Button>{\" \"}\n        </Col>\n      </MyRow>\n    </Form>\n  );\n};\n\nexport default Demographics;\n","import styled from \"styled-components\";\nimport { Row } from \"react-bootstrap\";\n\nexport const MyRow = styled(Row)`\n  justify-content: center;\n  text-align: center;\n`;\n","import { Col, Button, Image, Figure } from \"react-bootstrap\";\nimport { MyRow } from \"./style\";\n\nconst TypeImage = ({ type }) => {\n  switch (type) {\n    case \"Area\":\n      return <Image src={process.env.PUBLIC_URL + \"/Area.png\"} />;\n    case \"Angle\":\n      return <Image src={process.env.PUBLIC_URL + \"/Angle.png\"} />;\n    case \"Length\":\n      return <Image src={process.env.PUBLIC_URL + \"/Length.png\"} />;\n    case \"POUA\":\n      return <Image src={process.env.PUBLIC_URL + \"/POUA.png\"} />;\n    case \"POCA\":\n      return <Image src={process.env.PUBLIC_URL + \"/POCA.png\"} />;\n    default:\n      return <></>;\n  }\n};\n\nconst RenderResults = ({ results }) => {\n  return (\n    <>\n      <MyRow>\n        <Col>More Accurate</Col>\n        <Col>Less Accurate</Col>\n      </MyRow>\n\n      {results.map((row) => (\n        <Col>\n          <TypeImage key={row[0]} type={row[0]} />\n        </Col>\n      ))}\n    </>\n  );\n};\n\nconst TypeSwitch = ({ data }) => {\n  if (data.p) {\n    return <MyRow>{data.p}</MyRow>;\n  } else if (data.image) {\n    const image = data.image;\n    return (\n      <MyRow>\n        <Figure>\n          <Figure.Image\n            height={image.height ? image.height : \"100%\"}\n            width={image.width ? image.width : \"100%\"}\n            src={process.env.PUBLIC_URL + \"/\" + image.src}\n          />\n          <Figure.Caption>{image.caption}</Figure.Caption>\n        </Figure>\n      </MyRow>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nconst Information = ({ page, nextPage, exportStudy, results }) => {\n  if (page.finish === true) {\n    localStorage.clear();\n  }\n  return (\n    <>\n      <MyRow>\n        <h1>{page.title}</h1>\n      </MyRow>\n      {page.html &&\n        page.html.map((line, index) => (\n          <TypeSwitch key={index} data={line}></TypeSwitch>\n        ))}\n      <MyRow>\n        <br />\n      </MyRow>\n      {page.finish === true ? (\n        <>\n          <MyRow>\n            <Col>\n              <Button variant=\"secondary\" onClick={exportStudy}>\n                Download File\n              </Button>{\" \"}\n            </Col>\n          </MyRow>\n        </>\n      ) : (\n        <MyRow>\n          <Col>\n            <Button variant=\"secondary\" onClick={nextPage}>\n              Next\n            </Button>{\" \"}\n          </Col>\n        </MyRow>\n      )}\n    </>\n  );\n};\n\nexport default Information;\n","import { Row, Button } from \"react-bootstrap\";\n\nconst Break = ({ page, nextPage }) => {\n  return (\n    <>\n      <Row>\n        <h1>{page.title}</h1>\n      </Row>\n      <pre>{page.text}</pre>\n      {/* </Row> */}\n      <Button variant=\"secondary\" onClick={nextPage}>\n        Next\n      </Button>{\" \"}\n    </>\n  );\n};\n\nexport default Break;\n","import styled from \"styled-components\";\nimport { Row } from \"react-bootstrap\";\n\nexport const MyRow = styled(Row)`\n  justify-content: center;\n  text-align: center;\n`;\n","import { Col, Button, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport Poca from \"../../../Components/Poca/Poca\";\nimport Area from \"../../../Components/Area/Area\";\nimport Angle from \"../../../Components/Angle/Angle\";\nimport Length from \"../../../Components/Length/Length\";\nimport Poua from \"../../../Components/Poua/Poua\";\nimport { MyRow } from \"./style\";\n\nconst Section = ({ page, data, saveAnswer, nextQuestion, questionIndex }) => {\n  const [array, setArray] = useState([]);\n  const [answer, setAnswer] = useState(\"\");\n\n  function handleNextQuestion(event) {\n    event.preventDefault();\n    if (answer === \"\") {\n      alert(\"Please select an option before hitting next.\");\n      return;\n    }\n    const answerName = data.answerName[questionIndex].toString();\n    saveAnswer(answerName, answer).then(function (response) {\n      setAnswer(\"\");\n      nextQuestion(array.length);\n    });\n  }\n\n  function onChange(value) {\n    setAnswer(value);\n  }\n\n  useEffect(() => {\n    let lengths = [];\n    let array = [];\n    for (let used of page.valuesUsed) {\n      let usedLength = 0;\n      if (Array.isArray(data[used])) {\n        usedLength = data[used].length;\n      } else {\n        usedLength = 1;\n      }\n\n      lengths.push(usedLength);\n    }\n    const maxLength = Math.max(...lengths);\n    for (var i = 0; i < maxLength; i++) {\n      let row = {};\n      let index = 0;\n      for (let used of page.valuesUsed) {\n        const usedLength = lengths[index];\n        index++;\n        if (usedLength === 1) {\n          row[used] = data[used];\n        } else if (usedLength === maxLength) {\n          row[used] = data[used][i];\n        } else {\n          console.log(\n            \"Something went wrong with number entries don't match max:\",\n            maxLength,\n            \"or 1:\",\n            used\n          );\n        }\n      }\n      array.push(row);\n    }\n    setArray(array);\n  }, [data, page]);\n\n  const typeRendering = (data, array, index, domain) => {\n    switch (data.type) {\n      case \"POCA\":\n        return <Poca question={array[index]} domain={domain} />;\n      case \"Angle\":\n        return <Angle question={array[index]} domain={domain} />;\n      case \"Area\":\n        return <Area question={array[index]} domain={domain} />;\n      case \"Length\":\n        return <Length question={array[index]} domain={domain} />;\n      case \"POUA\":\n        return <Poua question={array[index]} domain={domain} />;\n      default:\n        throw new Error(\"Missing type of testing Section.\");\n    }\n  };\n\n  return (\n    <>\n      {/* <MyRow>{typeRendering(data, array, questionIndex, data.Domain)}</MyRow> */}\n      <MyRow>{array[questionIndex] && array[questionIndex].Question}</MyRow>\n      <MyRow>\n        <Col md={2}>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"\"\n            id=\"Answer\"\n            onChange={(e) => onChange(e.target.value)}\n            value={answer}\n          />\n        </Col>\n      </MyRow>\n      <MyRow>\n        <br />\n      </MyRow>\n      <MyRow>\n        <Col>\n          <Button variant=\"secondary\" onClick={handleNextQuestion}>\n            Next\n          </Button>{\" \"}\n        </Col>\n      </MyRow>\n    </>\n  );\n};\n\nexport default Section;\n","import styled from \"styled-components\";\nimport { Row, Image } from \"react-bootstrap\";\n\nexport const MyRow = styled(Row)`\n  justify-content: center;\n  text-align: center;\n`;\n\nexport const ImgRow = styled(Row)`\n  align-items: center;\n`;\n\nexport const QRow = styled(Row)`\n  padding-bottom: 10px;\n`;\n\nexport const TopImage = styled(Image)`\n  padding-bottom: 10px;\n`;\n","import { Col, Button, Form, Image, Input } from \"react-bootstrap\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport { MyRow, TopImage, ImgRow, QRow } from \"./style\";\n\nconst Radio = ({\n  page,\n  data,\n  order,\n  saveAnswer,\n  prevQuestion,\n  prevAnswer,\n  nextQuestion,\n  questionIndex,\n}) => {\n  const [answer, setAnswer] = useState(prevAnswer ? prevAnswer[1] : -1);\n  useEffect(() => {\n    if (prevAnswer === undefined) {\n      setAnswer(-1);\n    } else {\n      setAnswer(prevAnswer[1]);\n    }\n  }, [prevAnswer]);\n\n  function handleNextQuestion(event) {\n    event.preventDefault();\n    if (answer === -1) {\n      alert(\"Please select an option before hitting next.\");\n      return;\n    }\n    const currQ = data[order[questionIndex]];\n    const answerName =\n      currQ[\"chartId\"] +\n      \"_\" +\n      currQ[\"algorithm\"] +\n      \"_\" +\n      currQ[\"questionType\"] +\n      \"_\" +\n      currQ[\"Privacy\"] +\n      \"_\" +\n      currQ[\"Bin\"];\n    saveAnswer(answerName, answer).then(function (response) {\n      setAnswer(-1);\n      nextQuestion(questionIndex + 1);\n    });\n  }\n\n  function onChange(value) {\n    setAnswer(value);\n  }\n  function onkeyPress(event) {\n    if (event.charCode === 49) {\n      this.onChange(0);\n    } else if (event.charCode === 50) {\n      this.onChange(1);\n    } else if (event.charCode === 51) {\n      this.onChange(2);\n    } else if (event.charCode === 52) {\n      this.onChange(3);\n    } else if (event.charCode === 13 || event.charCode === 32) {\n      this.handleNextQuestion();\n    }\n  }\n\n  const typeRendering = (data) => {\n    switch (data.questionType) {\n      case \"distribution\":\n        return (\n          <h4>\n            <b>Distribution: </b>The distribution of points in space for the\n            graph on the right is comparable to the graph on the left, including\n            the visibility of manifolds and the relative density of each region.\n          </h4>\n        );\n      case \"correlation\":\n        return (\n          <h4>\n            <b>Correlation: </b>The graph on the right preserves the level of\n            dependence between the two attributes—including non-linear\n            dependence.\n          </h4>\n        );\n      case \"clusters\":\n        return (\n          <h4>\n            <b>Clusters: </b>The clusters visible in the graph on the left—and\n            no other clusters—are visible on the graph on the right and occur in\n            the same places.\n          </h4>\n        );\n      default:\n        throw new Error(\"Missing type of testing Section.\");\n    }\n  };\n\n  const handleKeyPress = useCallback((event) => {\n    if (event.key === \"1\") {\n      setAnswer(0);\n    } else if (event.key === \"2\") {\n      setAnswer(1);\n    } else if (event.key === \"3\") {\n      setAnswer(2);\n    } else if (event.key === \"4\") {\n      setAnswer(3);\n    } else if (event.key === \"Enter\" || event.key === \" \") {\n      handleNextQuestion(event);\n    }\n  }, []);\n\n  useEffect(() => {\n    // attach the event listener\n    document.addEventListener(\"keydown\", handleKeyPress);\n\n    // remove the event listener\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [handleKeyPress]);\n  var currQuestion = data[order[questionIndex]];\n\n  var folderLoc =\n    process.env.PUBLIC_URL + \"/Chart\" + currQuestion[\"chartId\"] + \"/\";\n\n  return (\n    <>\n      <ImgRow>\n        <Col>\n          {/* <TopImage\n            src={folderLoc + currQuestion[\"scatteredImg\"]}\n            width=\"400px\"\n          /> */}\n          <div style={{ position: \"absolute\", left: \"30%\" }}>Original</div>\n          <Image src={folderLoc + currQuestion[\"binnedImg\"]} width=\"600px\" />\n        </Col>\n        <Col>\n          <div style={{ position: \"absolute\", left: \"65%\" }}>Private</div>\n          <Image src={folderLoc + currQuestion[\"algorithmImg\"]} width=\"600px\" />\n        </Col>\n      </ImgRow>\n      <MyRow>{typeRendering(currQuestion)}</MyRow>\n      <MyRow>\n        <br />\n      </MyRow>\n      <QRow>\n        <Form>\n          <Form.Check\n            type=\"radio\"\n            onClick={(e) => onChange(0)}\n            checked={answer === 0 ? true : false}\n            id={`option-0`}\n            label={`Doesn’t preserve the feature`}\n          />\n          <Form.Check\n            type=\"radio\"\n            onClick={(e) => onChange(1)}\n            checked={answer === 1 ? true : false}\n            id={`option-1`}\n            label={`Suggests the feature could exist`}\n          />\n          <Form.Check\n            type=\"radio\"\n            onClick={(e) => onChange(2)}\n            checked={answer === 2 ? true : false}\n            id={`option-2`}\n            label={`Somewhat preserves the feature`}\n          />\n          <Form.Check\n            type=\"radio\"\n            onClick={(e) => onChange(3)}\n            checked={answer === 3 ? true : false}\n            id={`option-3`}\n            label={`Preserves the feature very well`}\n          />\n        </Form>\n      </QRow>\n      <MyRow>\n        <Col>\n          <Button variant=\"secondary\" onClick={prevQuestion}>\n            Prev\n          </Button>{\" \"}\n        </Col>\n        <Col>\n          <Button variant=\"secondary\" onClick={handleNextQuestion}>\n            Next\n          </Button>{\" \"}\n        </Col>\n      </MyRow>\n    </>\n  );\n};\n\nexport default Radio;\n","import React from \"react\";\nimport Demographics from \"./Demographic/Demographic\";\nimport Information from \"./Information/Information\";\nimport Break from \"./Break/Break\";\nimport Section from \"./Section/Section\";\nimport Radio from \"./Radio/Radio\";\n\nconst Option = ({\n  page,\n  data,\n  order,\n  grabInformation,\n  saveAnswer,\n  questionIndex,\n  exportStudy,\n  prevQuestion,\n  nextQuestion,\n  answers,\n  nextPage,\n  results,\n}) => {\n  if (page === undefined) {\n    return <></>;\n  } else if (page.type === \"Demographic\") {\n    return (\n      <Demographics\n        page={page}\n        grabInformation={grabInformation}\n        nextPage={nextPage}\n      />\n    );\n  } else if (page.type === \"Information\") {\n    return (\n      <Information\n        page={page}\n        nextPage={nextPage}\n        exportStudy={exportStudy}\n        results={results}\n      />\n    );\n  } else if (page.type === \"Section\") {\n    return (\n      <Section\n        page={page}\n        data={data[page.position]}\n        saveAnswer={saveAnswer}\n        questionIndex={questionIndex}\n        nextQuestion={nextQuestion}\n      />\n    );\n  } else if (page.type === \"Radio\") {\n    return (\n      <Radio\n        page={page}\n        data={data[page.position]}\n        order={order}\n        saveAnswer={saveAnswer}\n        questionIndex={questionIndex}\n        prevQuestion={prevQuestion}\n        nextQuestion={nextQuestion}\n        prevAnswer={answers[questionIndex]}\n      />\n    );\n  } else if (page.type === \"Break\") {\n    return <Break page={page} nextPage={nextPage} />;\n  } else {\n    console.log(\"Page missing\", page.type);\n    return <></>;\n  }\n};\n\nconst Pages = ({\n  siteStructure,\n  data,\n  order,\n  grabInformation,\n  currPage,\n  saveAnswer,\n  nextPage,\n  exportStudy,\n  prevQuestion,\n  nextQuestion,\n  answers,\n  questionIndex,\n  results,\n}) => {\n  return (\n    <>\n      {siteStructure.pages && (\n        <Option\n          key={currPage}\n          page={siteStructure.pages[currPage]}\n          data={data}\n          order={order}\n          grabInformation={grabInformation}\n          saveAnswer={saveAnswer}\n          exportStudy={exportStudy}\n          nextPage={nextPage}\n          prevQuestion={prevQuestion}\n          nextQuestion={nextQuestion}\n          answers={answers}\n          questionIndex={questionIndex}\n          results={results}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Pages;\n","import { Container, ProgressBar } from \"react-bootstrap\";\nimport styled from \"styled-components\";\n\nexport const MyContainer = styled(Container)`\n  background-color: white;\n  min-height: 600px;\n`;\n\nexport const MyDiv = styled.div`\n  background-color: lightgray;\n  display: flex;\n  flex-flow: column;\n  min-height: 100vh;\n`;\n\nexport const MyProgressBar = styled(ProgressBar)`\n  width: 100vw;\n  color: ${(props) => props.barColor};\n`;\n","import React from \"react\";\nimport studyData from \"../Data/studyData.json\";\nimport studyMeta from \"../Data/studyMeta.json\";\nimport Pages from \"./Pages/Pages\";\nimport { MyContainer, MyDiv, MyProgressBar } from \"./style\";\nimport { Navbar, Row, Col, Button } from \"react-bootstrap\";\n\nclass Section extends React.Component {\n  state = {\n    data: {},\n    length: -1,\n    siteStructure: {},\n    progress: 0,\n    currSession: { currPage: 0, id: 0, questionIndex: 0 },\n    order: [],\n    answers: [],\n    results: [],\n  };\n\n  shuffle = (array, data) => {\n    let correlationIndex = [];\n    let clusterIndex = [];\n    let distributionIndex = [];\n    let currentIndex = array.length,\n      randomIndex;\n    // console.log(randomIndex);\n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      let tasks = [\"correlation\", \"clusters\", \"distribution\"];\n      randomIndex = Math.floor(Math.random() * currentIndex);\n\n      // console.log(data[0]);\n      // console.log(data[0][currentIndex - 1]);\n      if (data[0][currentIndex - 1][\"questionType\"] === \"correlation\") {\n        correlationIndex.push(currentIndex);\n      }\n      if (data[0][currentIndex - 1][\"questionType\"] === \"clusters\") {\n        clusterIndex.push(currentIndex);\n      }\n      if (data[0][currentIndex - 1][\"questionType\"] === \"distribution\") {\n        distributionIndex.push(currentIndex);\n      }\n\n      currentIndex--;\n      // console.log(currentIndex);\n\n      // And swap it with the current element.\n      // [array[currentIndex], array[randomIndex]] = [\n      //   array[randomIndex],\n      //   array[currentIndex],\n      // ];\n    }\n\n    let corrIndex = correlationIndex.length,\n      randCorrIndex;\n    while (corrIndex != 0) {\n      // Pick a remaining element.\n      randCorrIndex = Math.floor(Math.random() * corrIndex);\n\n      // console.log(data[0]);\n      // console.log(data[0][currentIndex - 1]);\n\n      corrIndex--;\n\n      // And swap it with the current element.\n      [correlationIndex[corrIndex], correlationIndex[randCorrIndex]] = [\n        correlationIndex[randCorrIndex],\n        correlationIndex[corrIndex],\n      ];\n    }\n\n    let clustIndex = clusterIndex.length,\n      randClustIndex;\n    while (clustIndex != 0) {\n      // Pick a remaining element.\n      randClustIndex = Math.floor(Math.random() * clustIndex);\n\n      // console.log(data[0]);\n      // console.log(data[0][currentIndex - 1]);\n\n      clustIndex--;\n\n      // And swap it with the current element.\n      [clusterIndex[clustIndex], clusterIndex[randClustIndex]] = [\n        clusterIndex[randClustIndex],\n        clusterIndex[clustIndex],\n      ];\n    }\n\n    let distIndex = distributionIndex.length,\n      randDistIndex;\n    while (distIndex != 0) {\n      // Pick a remaining element.\n      randDistIndex = Math.floor(Math.random() * distIndex);\n\n      // console.log(data[0]);\n      // console.log(data[0][currentIndex - 1]);\n\n      distIndex--;\n\n      // And swap it with the current element.\n      [distributionIndex[distIndex], distributionIndex[randDistIndex]] = [\n        distributionIndex[randDistIndex],\n        distributionIndex[distIndex],\n      ];\n    }\n    array = correlationIndex.concat(clusterIndex, distributionIndex);\n    console.log(array);\n    return array;\n  };\n\n  componentDidMount() {\n    const data = studyData;\n    const siteStructure = studyMeta;\n    this.setState({\n      data: data,\n      siteStructure: siteStructure,\n      length: data[0].length,\n    });\n    const questionOrder = localStorage.getItem(\"questionOrder\");\n    const progress = localStorage.getItem(\"Progress\");\n    const progressLabel = localStorage.getItem(\"ProgressLabel\");\n    const currSession = localStorage.getItem(\"currSession\");\n    const answers = localStorage.getItem(\"answers\");\n\n    if (questionOrder) {\n      this.setState({ order: questionOrder.split(\",\") });\n    } else {\n      var array = [...Array(data[0].length).keys()];\n      const reorder = this.shuffle(array, data);\n\n      localStorage.setItem(\"questionOrder\", reorder);\n      this.setState({ order: reorder });\n    }\n    if (progress) {\n      this.setState({ progress: progress });\n    }\n    if (progressLabel) {\n      this.setState({ progressLabel: progressLabel });\n    }\n    if (currSession) {\n      this.setState({ currSession: JSON.parse(currSession) });\n    } else {\n      this.setState({ currSession: { currPage: 0, id: 0, questionIndex: 0 } });\n    }\n    if (answers) {\n      this.setState({ answers: JSON.parse(answers) });\n    }\n  }\n\n  nextPage = () => {\n    const currSession = this.state.currSession;\n    currSession.currPage += 1;\n    currSession.questionIndex = 0;\n    // const currType = this.state.siteStructure.pages[currSession.currPage].type;\n    // if (currType === \"Section\") {\n    this.setProgressBar(0, \"\");\n    // } else {\n    //   this.setProgressBar(\n    //     \"Page \" +\n    //       (currSession.currPage / (this.state.siteStructure.pages.length - 1)) *\n    //         100,\n    //     currSession.currPage +\n    //       \" / \" +\n    //       (this.state.siteStructure.pages.length - 1)\n    //   );\n    // }\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\n    this.setState({ currSession: currSession });\n    if (this.state.siteStructure.pages.length - 1 === currSession.currPage) {\n      this.exportStudy();\n    }\n  };\n\n  setProgressBar = (value, label) => {\n    localStorage.setItem(\"Progress\", value);\n    localStorage.setItem(\"ProgressLabel\", label);\n    this.setState({ progress: value, progressLabel: label });\n  };\n\n  updatePage = (value) => {\n    const currSession = this.state.currSession;\n    const size = this.state.length;\n    if (currSession.questionIndex + value < 0) {\n      currSession.questionIndex = 0;\n    } else {\n      currSession.questionIndex += value;\n    }\n    if (currSession.questionIndex === size) {\n      this.nextPage();\n      return;\n    }\n    this.setProgressBar(\n      (currSession.questionIndex / size) * 100,\n      \"Question \" + currSession.questionIndex + \" / \" + size\n    );\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\n    this.setState({ currSession: currSession });\n  };\n\n  prevQuestion = () => {\n    this.updatePage(-1);\n  };\n\n  nextQuestion = () => {\n    this.updatePage(1);\n  };\n\n  grabInformation = (data) => {\n    const currSession = this.state.currSession;\n    currSession.demographic = data;\n    const sessionID = this.state.siteStructure.meta.sessionID;\n    if (sessionID in data) {\n      currSession.id = data[sessionID];\n    }\n    localStorage.setItem(\"currSession\", JSON.stringify(currSession));\n    this.setState({ currSession: currSession });\n  };\n\n  saveAnswer = (field, answer) => {\n    const newAnswers = this.state.answers.slice();\n    if (this.state.currSession.questionIndex > newAnswers.length - 1) {\n      newAnswers.push([field, answer]);\n    } else {\n      newAnswers[this.state.currSession.questionIndex] = [field, answer];\n    }\n    localStorage.setItem(\"answers\", JSON.stringify(newAnswers));\n    this.setState({ answers: newAnswers });\n    return Promise.resolve(newAnswers);\n  };\n\n  exportStudy = () => {\n    var FileSaver = require(\"file-saver\");\n\n    let jsonFile = {\n      session: this.state.currSession,\n      answers: this.state.answers,\n    };\n\n    var jsonse = JSON.stringify(jsonFile, null, 2);\n\n    var blob = new Blob([jsonse], { type: \"application/json\" });\n    FileSaver.saveAs(blob, \"user\" + this.state.currSession.id + \".json\");\n  };\n\n  backupStudy = () => {\n    var FileSaver = require(\"file-saver\");\n    var jsonse = JSON.stringify(this.state, null, 2);\n    var blob = new Blob([jsonse], { type: \"application/json\" });\n    FileSaver.saveAs(blob, \"user\" + this.state.currSession.id + \".json\");\n  };\n  loadBackup = () => {};\n\n  render() {\n    return (\n      <MyDiv>\n        <MyContainer>\n          <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\n            <MyProgressBar\n              now={this.state.progress}\n              label={this.state.progress + \"%\"}\n              variant=\"info\"\n            />\n          </Navbar>\n          <Row style={{ alignItems: \"\" }}>\n            {/* <Col>\n              <Button variant=\"secondary\" size=\"sm\" onClick={this.loadBackup}>\n                Import\n              </Button>\n            </Col> */}\n            <Col sm={{ span: 1 }}>\n              <Button variant=\"secondary\" size=\"sm\" onClick={this.backupStudy}>\n                Backup\n              </Button>\n            </Col>\n          </Row>\n          <Pages\n            siteStructure={this.state.siteStructure}\n            currPage={\n              this.state.currSession != null\n                ? this.state.currSession.currPage\n                : undefined\n            }\n            data={this.state.data}\n            order={this.state.order}\n            grabInformation={this.grabInformation}\n            saveAnswer={this.saveAnswer}\n            nextPage={this.nextPage}\n            prevQuestion={this.prevQuestion}\n            nextQuestion={this.nextQuestion}\n            answers={this.state.answers}\n            exportStudy={this.exportStudy}\n            results={this.state.results}\n            questionIndex={\n              this.state.currSession != null\n                ? this.state.currSession.questionIndex\n                : undefined\n            }\n          />\n        </MyContainer>\n      </MyDiv>\n    );\n  }\n}\n\nexport default Section;\n","import './App.css';\nimport Section from './Section'\n\nfunction App() {\n  return <Section/>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}